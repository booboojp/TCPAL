{"version":3,"file":"bundle.js","mappings":";;;;AAAA,MAAMA,KAAK,GAAG,IAAIC,KAAK,CAACC,KAAK,CAAC,CAAC;AAC/B,MAAMC,MAAM,GAAG,IAAIF,KAAK,CAACG,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;AAEjG,MAAMC,QAAQ,GAAG,IAAIP,KAAK,CAACQ,aAAa,CAAC;EACrCC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,KAAK;EAChBC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFJ,QAAQ,CAACK,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;AACvDO,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACR,QAAQ,CAACS,UAAU,CAAC;;AAE9C;AACAT,QAAQ,CAACS,UAAU,CAACC,KAAK,CAACC,QAAQ,GAAG,OAAO;AAC5CX,QAAQ,CAACS,UAAU,CAACC,KAAK,CAACE,GAAG,GAAG,GAAG;AACnCZ,QAAQ,CAACS,UAAU,CAACC,KAAK,CAACG,IAAI,GAAG,GAAG;AAEpC,MAAMC,QAAQ,GAAG,IAAIrB,KAAK,CAACsB,WAAW,CAAC,CAAC;AACxC,MAAMC,QAAQ,GAAG,IAAIvB,KAAK,CAACwB,iBAAiB,CAAC;EACzCC,KAAK,EAAE,QAAQ;EACfC,SAAS,EAAE,IAAI;EACfC,kBAAkB,EAAE;AACxB,CAAC,CAAC;AACF,MAAMC,IAAI,GAAG,IAAI5B,KAAK,CAAC6B,IAAI,CAACR,QAAQ,EAAEE,QAAQ,CAAC;AAC/C,MAAMO,IAAI,GAAG,IAAI9B,KAAK,CAAC+B,UAAU,CAAC,GAAG,CAAC;AACtCH,IAAI,CAACI,GAAG,CAACF,IAAI,CAAC;AACd/B,KAAK,CAACiC,GAAG,CAACJ,IAAI,CAAC;AAGf1B,MAAM,CAACgB,QAAQ,CAACe,CAAC,GAAG,CAAC;AAErB,SAASC,cAAcA,CAAA,EAAG;EACtBhC,MAAM,CAACiC,MAAM,GAAG/B,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;EACtDJ,MAAM,CAACkC,sBAAsB,CAAC,CAAC;EAC/B7B,QAAQ,CAACK,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;AAC3D;AACAF,MAAM,CAACiC,gBAAgB,CAAC,QAAQ,EAAEH,cAAc,EAAE,KAAK,CAAC;AAGxD,SAASI,OAAOA,CAAA,EAAG;EACf;EACAV,IAAI,CAACW,QAAQ,CAACC,CAAC,IAAI,IAAI;EACvBZ,IAAI,CAACW,QAAQ,CAACE,CAAC,IAAI,IAAI;;EAEvB;EACAC,aAAa,IAAI,CAACC,YAAY,GAAGD,aAAa,IAAIE,WAAW;;EAE7D;EACAhB,IAAI,CAACV,QAAQ,CAAC2B,IAAI,CAACC,cAAc,EAAEF,WAAW,CAAC;EAE/CrC,QAAQ,CAACwC,MAAM,CAAChD,KAAK,EAAEG,MAAM,CAAC;EAC9B8C,qBAAqB,CAACV,OAAO,CAAC;AAClC;AAEA,SAASW,OAAOA,CAAA,EAAG;EACf5B,QAAQ,CAAC4B,OAAO,CAAC,CAAC;EAClB1B,QAAQ,CAAC0B,OAAO,CAAC,CAAC;EAClB1C,QAAQ,CAAC0C,OAAO,CAAC,CAAC;AACtB;AAEAX,OAAO,CAAC,CAAC,C","sources":["webpack://stuff/./src/public/js/main.js"],"sourcesContent":["const scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\nconst renderer = new THREE.WebGLRenderer({ \n    alpha: true,\n    antialias: false,\n    powerPreference: \"high-performance\"\n});\n\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n// Fixed Three.js canvas\nrenderer.domElement.style.position = \"fixed\";\nrenderer.domElement.style.top = \"0\";\nrenderer.domElement.style.left = \"0\";\n\nconst geometry = new THREE.BoxGeometry();\nconst material = new THREE.MeshBasicMaterial({ \n    color: 0xff0000,\n    wireframe: true,\n    wireframeLinewidth: 1\n});\nconst cube = new THREE.Mesh(geometry, material);\nconst axes = new THREE.AxesHelper(0.5);\ncube.add(axes);\nscene.add(cube);\n\n\ncamera.position.z = 5;\n\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n}\nwindow.addEventListener('resize', onWindowResize, false);\n\n\nfunction animate() {\n    // Always rotate the cube\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n\n    // Smoothly interpolate scroll position\n    currentScroll += (targetScroll - currentScroll) * scrollSpeed;\n    \n    // Interpolate cube position towards targetPosition\n    cube.position.lerp(targetPosition, scrollSpeed);\n\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);\n}\n\nfunction dispose() {\n    geometry.dispose();\n    material.dispose();\n    renderer.dispose();\n}\n\nanimate();"],"names":["scene","THREE","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","antialias","powerPreference","setSize","document","body","appendChild","domElement","style","position","top","left","geometry","BoxGeometry","material","MeshBasicMaterial","color","wireframe","wireframeLinewidth","cube","Mesh","axes","AxesHelper","add","z","onWindowResize","aspect","updateProjectionMatrix","addEventListener","animate","rotation","x","y","currentScroll","targetScroll","scrollSpeed","lerp","targetPosition","render","requestAnimationFrame","dispose"],"sourceRoot":""}